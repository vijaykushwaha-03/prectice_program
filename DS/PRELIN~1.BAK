//Link list insert,display,insert first,insert last,insert pos,delete first,delete last,delete pos,exit.
#include<stdio.h>
#include<conio.h>
#include<stdlib.h>

struct node
{
	int data;
	struct node *next;
};
struct node *head=0,*temp,*newnode;

void create()
{
	newnode=(struct node*)malloc(sizeof(struct node));
	printf("\n\tEnter data==>");
	scanf("%d",&newnode->data);
	newnode->next=0;

	if(head==0)
	{
		head=newnode;
		temp=head;
	}
	else
	{
		temp->next=newnode;
		temp=newnode;
	}
}

void display()
{
	temp=head;
	while(temp!=0)
	{
		printf(" %d ",temp->data);
		temp=temp->next;
	}
}

void insert_first()
{
	newnode=(struct node*)malloc(sizeof(struct node));
	printf("Enter data");
	scanf("%d",&newnode->data);
	newnode->next=head;
	head=newnode;
}
void insert_last()
{
	newnode=(struct node*)malloc(sizeof(struct node));
	printf("Enter data");
	scanf("%d",&newnode->data);
	temp=head;
	while(temp->next!=0)
	{
		temp=temp->next;
	}
	temp->next=newnode;
}
void insert_pos()
{
	int i=1,pos;
	printf("Enter position");
	scanf("%d",&pos);
	newnode=(struct node*)malloc(sizeof(struct node));
	printf("Enter data");
	scanf("%d",&newnode->data);

	temp=head;
	while(i<pos)
	{
		temp=temp->next;
		i++;
	}
	newnode->next=temp->next;
	temp->next=newnode;
}

void delete_first()
{
	temp=head;
	head=head->next;
	free(temp);
}

void delete_last()
{
	struct node *prenode;
	temp=head;
	while(temp->next!=0)
	{
		prenode=temp;
		temp=temp->next;
	}
	prenode->next=0;
	free(temp);
}

void delete_pos()
{
	struct node *prenode;
	int pos,i=1;
	printf("\n\tEnter position==>");
	scanf("%d",&pos);

	temp=head;
	while(i<pos)
	{
		prenode=temp;
		temp=temp->next;
		i++;
	}
	prenode->next=temp->next;
	free(temp);

}

void main()
{
	int chh;
	clrscr();
	do{

		printf("\n 1. Create");
		printf("\n 2. Display");
		printf("\n 3. Insert first");
		printf("\n 4. Insert last");
		printf("\n 5. Insert position");
		printf("\n 6. Delete first");
		printf("\n 7. Delete last");
		printf("\n 8. Delete position");
		printf("\n 9. Exit");
		printf("\n\tEnter your choice==>");
		scanf("%d",&chh);
		switch(chh)
		{
			case 1:
				create();
			break;

			case 2:
				display();
			break;

			case 3:
				insert_first();
			break;

			case 4:
				insert_last();
			break;

			case 5:
				insert_pos();
			break;

			case 6:
				delete_first();
			break;

			case 7:
				delete_last();
			break;

			case 8:
				delete_pos();
			break;

			case 9:
				exit(0);
			break;

		 default:
			printf("\n\tWrong choice==>");
		}

	  }while(chh>0);

	getch();

}

